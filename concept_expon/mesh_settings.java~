//import com.comsol.model.*;
//import com.comsol.model.util.*;
import java.io.*;
import java.lang.Math;

/*Ez fogja tudni a tenyleges mesh-t letrehozni

5 szakasz : kozepen ket egyenes m, M a meredekseg


*/

public class mesh_settings{


	double ppb1_x=0.195; //jobboldali
	double ppb2_x=0.201;	//baloldali
	
	double ppb1_x_old;
	double ppb2_x_old;

	//int N = 100000; //pontok szama -> ez csak a racsfuggveny rajzolashoz
	int N = 5500;
	
	
	
	int function_type = 100; //EXPONENTIAL -> mert ehhez van kedvem
	double ratio = 0.8;  
	
	//int n = 3;  //hatvany kitevo; csak paratlan lehet

	double x_kezdeti_pont=0.193;    
	//double x_vegpont=0.1905;
	double x_vegpont=0.203;
	
	double x_kezdeti_pont_old;
	double x_vegpont_old;
	
	double R = 0.8;   //ebbol lehet m, es M-et kiszamitani; pontok hany szazaleka keruljon be a suru mesh-es zonaba kb.; ez nem a ratio volt eddig?????

	//double r = 0.01; //ici-pici kor sugara, amivel lekerekul
	double delta_x = 0.01;  //kb. ekkora lehet az atmeneti zona szelessege, ami alatt a derivaltnak erteket kell valtoztatnia	

	
	void reset_mesh_parameters(double ppb1_x, double ppb2_x, double x_kezdeti_pont, double x_vegpont)
	{	
		//Archive mesh_settings
		this.ppb1_x_old = this.ppb1_x;
		this.ppb2_x_old = this.ppb2_x;
		this.x_kezdeti_pont_old=this.x_kezdeti_pont;
		this.x_vegpont_old=this.x_vegpont;

		this.ppb1_x=ppb1_x;
		this.ppb2_x=ppb2_x;
		this.x_kezdeti_pont=x_kezdeti_pont;
		this.x_vegpont=x_vegpont;
		
	}


	
}
